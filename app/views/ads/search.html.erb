<!-- <div class="banner-search banner-show" id="search">
  <% @cityCounter = 0 %>
  <% @ads.each do |ad| %>
    <% if ad.flight_date >= DateTime.now %>
      <% @cityCounter = @cityCounter + 1 %>
    <% end %>
  <% end %>
    <p>Il y a <%= @cityCounter %> vol(s) aux alentours de <%= @city %></p>
</div> -->
<div class="wrapper-search" style="margin-top: 50px;">
  <div class="container-temp" style="margin-right: 0px;">
    <div class="text-center">
      <%= render 'shared/formulaire' %>
    </div>
    <div class="row">
      <div class="col-xs-12 col-md-7">
        <!-- <button onclick="small_card()">Click me</button>
        <button onclick="big_card()">Click me</button> -->
        <div class="liste padded">
          <% @ads.each do |ad| %>
          <div class="col-xs-12 col-sm-12 col-md-12">
            <% if ad.user.pilotevalidation == true %>
              <%= render ad %>
            <% end %>
            </div>
          <% end %>
        </div>
      </div>
      <div class="col-xs-12 col-md-5">
       <div id="carte">
        <div id="map"></div>
       </div>
      </div>
    </div>
  </div>
</div>
 <% content_for(:after_js) do %>
  <%= javascript_tag do %>
    $(document).on('ready', function() {
      handler = Gmaps.build('Google');
      handler.buildMap({
      provider: {
        styles : [
    {
        "featureType": "landscape.man_made",
        "elementType": "geometry",
        "stylers": [
            {
                "color": "#f7f1df"
            }
        ]
    },
    {
        "featureType": "landscape.natural",
        "elementType": "geometry",
        "stylers": [
            {
                "color": "#d0e3b4"
            }
        ]
    },
    {
        "featureType": "landscape.natural.terrain",
        "elementType": "geometry",
        "stylers": [
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "poi",
        "elementType": "labels",
        "stylers": [
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "poi.business",
        "elementType": "all",
        "stylers": [
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "poi.medical",
        "elementType": "geometry",
        "stylers": [
            {
                "color": "#fbd3da"
            }
        ]
    },
    {
        "featureType": "poi.park",
        "elementType": "geometry",
        "stylers": [
            {
                "color": "#bde6ab"
            }
        ]
    },
    {
        "featureType": "road",
        "elementType": "geometry.stroke",
        "stylers": [
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "road",
        "elementType": "labels",
        "stylers": [
            {
                "visibility": "off"
            }
        ]
    },
    {
        "featureType": "road.highway",
        "elementType": "geometry.fill",
        "stylers": [
            {
                "color": "#ffe15f"
            }
        ]
    },
    {
        "featureType": "road.highway",
        "elementType": "geometry.stroke",
        "stylers": [
            {
                "color": "#efd151"
            }
        ]
    },
    {
        "featureType": "road.arterial",
        "elementType": "geometry.fill",
        "stylers": [
            {
                "color": "#ffffff"
            }
        ]
    },
    {
        "featureType": "road.local",
        "elementType": "geometry.fill",
        "stylers": [
            {
                "color": "black"
            }
        ]
    },
    {
        "featureType": "transit.station.airport",
        "elementType": "geometry.fill",
        "stylers": [
            {
                "color": "#cfb2db"
            }
        ]
    },
    {
        "featureType": "water",
        "elementType": "geometry",
        "stylers": [
            {
                "color": "#a2daf2"
            }
        ]
    }
]
      },
      internal: { id: 'map' } }, function(){
        markers = handler.addMarkers(<%= raw @markers.to_json %>);
        handler.bounds.extendWith(markers);
        handler.fitMapToBounds();
        handler.getMap().setZoom(6);
      });
    })
  <% end %>
 <% end %>



